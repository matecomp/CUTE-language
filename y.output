Terminals unused in grammar

   TK_WHILE
   TK_DOWHILE
   TK_SWITCH


State 3 conflicts: 6 shift/reduce, 1 reduce/reduce
State 13 conflicts: 6 shift/reduce, 1 reduce/reduce
State 23 conflicts: 5 shift/reduce
State 93 conflicts: 13 shift/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 136 conflicts: 13 shift/reduce


Grammar

    0 $accept: S $end

    1 S: PROGRAM DECLS MAIN

    2 PROGRAM: TK_PROGRAM TK_ID ';'

    3 DECLS: DECL DECLS
    4      | %empty

    5 DECL: VARS
    6     | FUNCTION

    7 VARS: VAR ';' VARS
    8     | %empty

    9 VAR: TIPO IDS
   10    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

   12 TIPO: TK_DOUBLE
   13     | TK_INT
   14     | TK_BOOL
   15     | TK_CHAR
   16     | TK_STRING

   17 IDS: IDS ',' TK_ID
   18    | TK_ID

   19 MAIN: TK_MBEGIN BLOCO TK_MEND

   20 $@1: %empty

   21 $@2: %empty

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO $@2

   23 $@3: %empty

   24 CORPO: TK_BEGIN $@3 CMDS RETURN TK_END

   25 CABECALHO: TIPO TK_ID OPC_PARAM

   26 OPC_PARAM: '(' PARAMS ')'
   27          | %empty

   28 PARAMS: PARAM ',' PARAMS
   29       | PARAM

   30 PARAM: TIPO TK_ID

   31 $@4: %empty

   32 BLOCO: TK_BEGIN $@4 CMDS TK_END

   33 RETURN: TK_RETURN E ';'

   34 CMDS: CMD ';' CMDS
   35     | LOOP CMDS
   36     | %empty

   37 CMD: WRITE
   38    | WRITELN
   39    | READ
   40    | ATRIB
   41    | BLOCO
   42    | VAR

   43 LOOP: CMD_IF
   44     | CMD_FOR

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

   46 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END
   47       | TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

   48 WRITELN: TK_WRITELN '(' E ')'

   49 WRITE: TK_WRITE '(' E ')'

   50 READ: TK_READ '(' NOME_VAR ')'

   51 ATRIB: TK_ID TK_ATRIB E
   52      | TK_ID '[' E ']' TK_ATRIB E
   53      | TK_ID '[' E ']' '[' E ']' TK_ATRIB E

   54 E: E '+' E
   55  | E '-' E
   56  | E '*' E
   57  | E '/' E
   58  | E '%' E
   59  | E '<' E
   60  | E '>' E
   61  | E TK_MEIG E
   62  | E TK_MAIG E
   63  | E TK_EQUAL E
   64  | E TK_DIF E
   65  | E TK_AND E
   66  | E TK_OR E
   67  | '(' E ')'
   68  | '!' E
   69  | F

   70 F: NOME_VAR
   71  | TK_INTEIRO
   72  | TK_REAL
   73  | TK_TEXTO

   74 EXPRS: EXPRS ',' E
   75      | E

   76 NOME_VAR: TK_ID
   77         | TK_ID '[' E ']'
   78         | TK_ID '[' E ']' '[' E ']'
   79         | TK_ID '(' EXPRS ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 68
'%' (37) 58
'(' (40) 26 48 49 50 67 79
')' (41) 26 48 49 50 67 79
'*' (42) 56
'+' (43) 54
',' (44) 17 28 74
'-' (45) 55
'/' (47) 57
';' (59) 2 7 33 34
'<' (60) 59
'>' (62) 60
'[' (91) 10 11 52 53 77 78
']' (93) 10 11 52 53 77 78
error (256)
TK_PROGRAM (258) 2
TK_BEGIN (259) 24 32 45 46 47
TK_END (260) 24 32 45 46 47
TK_MBEGIN (261) 19
TK_MEND (262) 19
TK_ATRIB (263) 45 51 52 53
TK_IF (264) 46 47
TK_ELSE (265) 47
TK_MAIG (266) 62
TK_MEIG (267) 61
TK_DIF (268) 64
TK_EQUAL (269) 63
TK_AND (270) 65
TK_OR (271) 66
TK_FOR (272) 45
TK_WHILE (273)
TK_DOWHILE (274)
TK_SWITCH (275)
TK_FUNCTION (276) 22
TK_RETURN (277) 33
TK_PTPT (278) 10 11 45
TK_INT (279) 13
TK_CHAR (280) 15
TK_BOOL (281) 14
TK_DOUBLE (282) 12
TK_STRING (283) 16
TK_TEXTO (284) 73
TK_ID (285) 2 17 18 25 30 51 52 53 76 77 78 79
TK_INTEIRO (286) 10 11 71
TK_REAL (287) 72
TK_WRITELN (288) 48
TK_WRITE (289) 49
TK_READ (290) 50


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
S (51)
    on left: 1, on right: 0
PROGRAM (52)
    on left: 2, on right: 1
DECLS (53)
    on left: 3 4, on right: 1 3
DECL (54)
    on left: 5 6, on right: 3
VARS (55)
    on left: 7 8, on right: 5 7
VAR (56)
    on left: 9 10 11, on right: 7 42
TIPO (57)
    on left: 12 13 14 15 16, on right: 9 10 11 25 30
IDS (58)
    on left: 17 18, on right: 9 10 11 17
MAIN (59)
    on left: 19, on right: 1
FUNCTION (60)
    on left: 22, on right: 6
$@1 (61)
    on left: 20, on right: 22
$@2 (62)
    on left: 21, on right: 22
CORPO (63)
    on left: 24, on right: 22
$@3 (64)
    on left: 23, on right: 24
CABECALHO (65)
    on left: 25, on right: 22
OPC_PARAM (66)
    on left: 26 27, on right: 25
PARAMS (67)
    on left: 28 29, on right: 26 28
PARAM (68)
    on left: 30, on right: 28 29
BLOCO (69)
    on left: 32, on right: 19 41
$@4 (70)
    on left: 31, on right: 32
RETURN (71)
    on left: 33, on right: 24
CMDS (72)
    on left: 34 35 36, on right: 24 32 34 35 45 46 47
CMD (73)
    on left: 37 38 39 40 41 42, on right: 34
LOOP (74)
    on left: 43 44, on right: 35
CMD_FOR (75)
    on left: 45, on right: 44
CMD_IF (76)
    on left: 46 47, on right: 43
WRITELN (77)
    on left: 48, on right: 38
WRITE (78)
    on left: 49, on right: 37
READ (79)
    on left: 50, on right: 39
ATRIB (80)
    on left: 51 52 53, on right: 40
E (81)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69, on right:
    33 45 46 47 48 49 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 74 75 77 78
F (82)
    on left: 70 71 72 73, on right: 69
EXPRS (83)
    on left: 74 75, on right: 74 79
NOME_VAR (84)
    on left: 76 77 78 79, on right: 45 50 70


State 0

    0 $accept: . S $end

    TK_PROGRAM  shift, and go to state 1

    S        go to state 2
    PROGRAM  go to state 3


State 1

    2 PROGRAM: TK_PROGRAM . TK_ID ';'

    TK_ID  shift, and go to state 4


State 2

    0 $accept: S . $end

    $end  shift, and go to state 5


State 3

    1 S: PROGRAM . DECLS MAIN

    TK_FUNCTION  shift, and go to state 6
    TK_INT       shift, and go to state 7
    TK_CHAR      shift, and go to state 8
    TK_BOOL      shift, and go to state 9
    TK_DOUBLE    shift, and go to state 10
    TK_STRING    shift, and go to state 11

    TK_MBEGIN    reduce using rule 4 (DECLS)
    TK_MBEGIN    [reduce using rule 8 (VARS)]
    TK_FUNCTION  [reduce using rule 8 (VARS)]
    TK_INT       [reduce using rule 8 (VARS)]
    TK_CHAR      [reduce using rule 8 (VARS)]
    TK_BOOL      [reduce using rule 8 (VARS)]
    TK_DOUBLE    [reduce using rule 8 (VARS)]
    TK_STRING    [reduce using rule 8 (VARS)]
    $default     reduce using rule 4 (DECLS)

    DECLS     go to state 12
    DECL      go to state 13
    VARS      go to state 14
    VAR       go to state 15
    TIPO      go to state 16
    FUNCTION  go to state 17


State 4

    2 PROGRAM: TK_PROGRAM TK_ID . ';'

    ';'  shift, and go to state 18


State 5

    0 $accept: S $end .

    $default  accept


State 6

   22 FUNCTION: TK_FUNCTION . $@1 CABECALHO CORPO $@2

    $default  reduce using rule 20 ($@1)

    $@1  go to state 19


State 7

   13 TIPO: TK_INT .

    $default  reduce using rule 13 (TIPO)


State 8

   15 TIPO: TK_CHAR .

    $default  reduce using rule 15 (TIPO)


State 9

   14 TIPO: TK_BOOL .

    $default  reduce using rule 14 (TIPO)


State 10

   12 TIPO: TK_DOUBLE .

    $default  reduce using rule 12 (TIPO)


State 11

   16 TIPO: TK_STRING .

    $default  reduce using rule 16 (TIPO)


State 12

    1 S: PROGRAM DECLS . MAIN

    TK_MBEGIN  shift, and go to state 20

    MAIN  go to state 21


State 13

    3 DECLS: DECL . DECLS

    TK_FUNCTION  shift, and go to state 6
    TK_INT       shift, and go to state 7
    TK_CHAR      shift, and go to state 8
    TK_BOOL      shift, and go to state 9
    TK_DOUBLE    shift, and go to state 10
    TK_STRING    shift, and go to state 11

    TK_MBEGIN    reduce using rule 4 (DECLS)
    TK_MBEGIN    [reduce using rule 8 (VARS)]
    TK_FUNCTION  [reduce using rule 8 (VARS)]
    TK_INT       [reduce using rule 8 (VARS)]
    TK_CHAR      [reduce using rule 8 (VARS)]
    TK_BOOL      [reduce using rule 8 (VARS)]
    TK_DOUBLE    [reduce using rule 8 (VARS)]
    TK_STRING    [reduce using rule 8 (VARS)]
    $default     reduce using rule 4 (DECLS)

    DECLS     go to state 22
    DECL      go to state 13
    VARS      go to state 14
    VAR       go to state 15
    TIPO      go to state 16
    FUNCTION  go to state 17


State 14

    5 DECL: VARS .

    $default  reduce using rule 5 (DECL)


State 15

    7 VARS: VAR . ';' VARS

    ';'  shift, and go to state 23


State 16

    9 VAR: TIPO . IDS
   10    | TIPO . IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO . IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_ID  shift, and go to state 24

    IDS  go to state 25


State 17

    6 DECL: FUNCTION .

    $default  reduce using rule 6 (DECL)


State 18

    2 PROGRAM: TK_PROGRAM TK_ID ';' .

    $default  reduce using rule 2 (PROGRAM)


State 19

   22 FUNCTION: TK_FUNCTION $@1 . CABECALHO CORPO $@2

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO       go to state 26
    CABECALHO  go to state 27


State 20

   19 MAIN: TK_MBEGIN . BLOCO TK_MEND

    TK_BEGIN  shift, and go to state 28

    BLOCO  go to state 29


State 21

    1 S: PROGRAM DECLS MAIN .

    $default  reduce using rule 1 (S)


State 22

    3 DECLS: DECL DECLS .

    $default  reduce using rule 3 (DECLS)


State 23

    7 VARS: VAR ';' . VARS

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TK_INT     [reduce using rule 8 (VARS)]
    TK_CHAR    [reduce using rule 8 (VARS)]
    TK_BOOL    [reduce using rule 8 (VARS)]
    TK_DOUBLE  [reduce using rule 8 (VARS)]
    TK_STRING  [reduce using rule 8 (VARS)]
    $default   reduce using rule 8 (VARS)

    VARS  go to state 30
    VAR   go to state 15
    TIPO  go to state 16


State 24

   18 IDS: TK_ID .

    $default  reduce using rule 18 (IDS)


State 25

    9 VAR: TIPO IDS .
   10    | TIPO IDS . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   17 IDS: IDS . ',' TK_ID

    '['  shift, and go to state 31
    ','  shift, and go to state 32

    $default  reduce using rule 9 (VAR)


State 26

   25 CABECALHO: TIPO . TK_ID OPC_PARAM

    TK_ID  shift, and go to state 33


State 27

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO . CORPO $@2

    TK_BEGIN  shift, and go to state 34

    CORPO  go to state 35


State 28

   32 BLOCO: TK_BEGIN . $@4 CMDS TK_END

    $default  reduce using rule 31 ($@4)

    $@4  go to state 36


State 29

   19 MAIN: TK_MBEGIN BLOCO . TK_MEND

    TK_MEND  shift, and go to state 37


State 30

    7 VARS: VAR ';' VARS .

    $default  reduce using rule 7 (VARS)


State 31

   10 VAR: TIPO IDS '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 38


State 32

   17 IDS: IDS ',' . TK_ID

    TK_ID  shift, and go to state 39


State 33

   25 CABECALHO: TIPO TK_ID . OPC_PARAM

    '('  shift, and go to state 40

    $default  reduce using rule 27 (OPC_PARAM)

    OPC_PARAM  go to state 41


State 34

   24 CORPO: TK_BEGIN . $@3 CMDS RETURN TK_END

    $default  reduce using rule 23 ($@3)

    $@3  go to state 42


State 35

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO . $@2

    $default  reduce using rule 21 ($@2)

    $@2  go to state 43


State 36

   32 BLOCO: TK_BEGIN $@4 . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 52
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 37

   19 MAIN: TK_MBEGIN BLOCO TK_MEND .

    $default  reduce using rule 19 (MAIN)


State 38

   10 VAR: TIPO IDS '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_PTPT  shift, and go to state 61


State 39

   17 IDS: IDS ',' TK_ID .

    $default  reduce using rule 17 (IDS)


State 40

   26 OPC_PARAM: '(' . PARAMS ')'

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO    go to state 62
    PARAMS  go to state 63
    PARAM   go to state 64


State 41

   25 CABECALHO: TIPO TK_ID OPC_PARAM .

    $default  reduce using rule 25 (CABECALHO)


State 42

   24 CORPO: TK_BEGIN $@3 . CMDS RETURN TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 65
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 43

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO $@2 .

    $default  reduce using rule 22 (FUNCTION)


State 44

   46 CMD_IF: TK_IF . E TK_BEGIN CMDS TK_END
   47       | TK_IF . E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 72
    F         go to state 73
    NOME_VAR  go to state 74


State 45

   45 CMD_FOR: TK_FOR . NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_ID  shift, and go to state 67

    NOME_VAR  go to state 75


State 46

   51 ATRIB: TK_ID . TK_ATRIB E
   52      | TK_ID . '[' E ']' TK_ATRIB E
   53      | TK_ID . '[' E ']' '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 76
    '['       shift, and go to state 77


State 47

   48 WRITELN: TK_WRITELN . '(' E ')'

    '('  shift, and go to state 78


State 48

   49 WRITE: TK_WRITE . '(' E ')'

    '('  shift, and go to state 79


State 49

   50 READ: TK_READ . '(' NOME_VAR ')'

    '('  shift, and go to state 80


State 50

   42 CMD: VAR .

    $default  reduce using rule 42 (CMD)


State 51

   41 CMD: BLOCO .

    $default  reduce using rule 41 (CMD)


State 52

   32 BLOCO: TK_BEGIN $@4 CMDS . TK_END

    TK_END  shift, and go to state 81


State 53

   34 CMDS: CMD . ';' CMDS

    ';'  shift, and go to state 82


State 54

   35 CMDS: LOOP . CMDS

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 83
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 55

   44 LOOP: CMD_FOR .

    $default  reduce using rule 44 (LOOP)


State 56

   43 LOOP: CMD_IF .

    $default  reduce using rule 43 (LOOP)


State 57

   38 CMD: WRITELN .

    $default  reduce using rule 38 (CMD)


State 58

   37 CMD: WRITE .

    $default  reduce using rule 37 (CMD)


State 59

   39 CMD: READ .

    $default  reduce using rule 39 (CMD)


State 60

   40 CMD: ATRIB .

    $default  reduce using rule 40 (CMD)


State 61

   10 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']'
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 84


State 62

   30 PARAM: TIPO . TK_ID

    TK_ID  shift, and go to state 85


State 63

   26 OPC_PARAM: '(' PARAMS . ')'

    ')'  shift, and go to state 86


State 64

   28 PARAMS: PARAM . ',' PARAMS
   29       | PARAM .

    ','  shift, and go to state 87

    $default  reduce using rule 29 (PARAMS)


State 65

   24 CORPO: TK_BEGIN $@3 CMDS . RETURN TK_END

    TK_RETURN  shift, and go to state 88

    RETURN  go to state 89


State 66

   73 F: TK_TEXTO .

    $default  reduce using rule 73 (F)


State 67

   76 NOME_VAR: TK_ID .
   77         | TK_ID . '[' E ']'
   78         | TK_ID . '[' E ']' '[' E ']'
   79         | TK_ID . '(' EXPRS ')'

    '['  shift, and go to state 90
    '('  shift, and go to state 91

    $default  reduce using rule 76 (NOME_VAR)


State 68

   71 F: TK_INTEIRO .

    $default  reduce using rule 71 (F)


State 69

   72 F: TK_REAL .

    $default  reduce using rule 72 (F)


State 70

   67 E: '(' . E ')'

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 92
    F         go to state 73
    NOME_VAR  go to state 74


State 71

   68 E: '!' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 93
    F         go to state 73
    NOME_VAR  go to state 74


State 72

   46 CMD_IF: TK_IF E . TK_BEGIN CMDS TK_END
   47       | TK_IF E . TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_BEGIN  shift, and go to state 94
    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107


State 73

   69 E: F .

    $default  reduce using rule 69 (E)


State 74

   70 F: NOME_VAR .

    $default  reduce using rule 70 (F)


State 75

   45 CMD_FOR: TK_FOR NOME_VAR . TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_ATRIB  shift, and go to state 108


State 76

   51 ATRIB: TK_ID TK_ATRIB . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 109
    F         go to state 73
    NOME_VAR  go to state 74


State 77

   52 ATRIB: TK_ID '[' . E ']' TK_ATRIB E
   53      | TK_ID '[' . E ']' '[' E ']' TK_ATRIB E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 110
    F         go to state 73
    NOME_VAR  go to state 74


State 78

   48 WRITELN: TK_WRITELN '(' . E ')'

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 111
    F         go to state 73
    NOME_VAR  go to state 74


State 79

   49 WRITE: TK_WRITE '(' . E ')'

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 112
    F         go to state 73
    NOME_VAR  go to state 74


State 80

   50 READ: TK_READ '(' . NOME_VAR ')'

    TK_ID  shift, and go to state 67

    NOME_VAR  go to state 113


State 81

   32 BLOCO: TK_BEGIN $@4 CMDS TK_END .

    $default  reduce using rule 32 (BLOCO)


State 82

   34 CMDS: CMD ';' . CMDS

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 114
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 83

   35 CMDS: LOOP CMDS .

    $default  reduce using rule 35 (CMDS)


State 84

   10 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']'
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    ']'  shift, and go to state 115


State 85

   30 PARAM: TIPO TK_ID .

    $default  reduce using rule 30 (PARAM)


State 86

   26 OPC_PARAM: '(' PARAMS ')' .

    $default  reduce using rule 26 (OPC_PARAM)


State 87

   28 PARAMS: PARAM ',' . PARAMS

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO    go to state 62
    PARAMS  go to state 116
    PARAM   go to state 64


State 88

   33 RETURN: TK_RETURN . E ';'

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 117
    F         go to state 73
    NOME_VAR  go to state 74


State 89

   24 CORPO: TK_BEGIN $@3 CMDS RETURN . TK_END

    TK_END  shift, and go to state 118


State 90

   77 NOME_VAR: TK_ID '[' . E ']'
   78         | TK_ID '[' . E ']' '[' E ']'

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 119
    F         go to state 73
    NOME_VAR  go to state 74


State 91

   79 NOME_VAR: TK_ID '(' . EXPRS ')'

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 120
    F         go to state 73
    EXPRS     go to state 121
    NOME_VAR  go to state 74


State 92

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E
   67  | '(' E . ')'

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ')'       shift, and go to state 122
    '%'       shift, and go to state 107


State 93

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E
   68  | '!' E .

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    TK_MAIG   [reduce using rule 68 (E)]
    TK_MEIG   [reduce using rule 68 (E)]
    TK_DIF    [reduce using rule 68 (E)]
    TK_EQUAL  [reduce using rule 68 (E)]
    TK_AND    [reduce using rule 68 (E)]
    TK_OR     [reduce using rule 68 (E)]
    '<'       [reduce using rule 68 (E)]
    '>'       [reduce using rule 68 (E)]
    '+'       [reduce using rule 68 (E)]
    '-'       [reduce using rule 68 (E)]
    '*'       [reduce using rule 68 (E)]
    '/'       [reduce using rule 68 (E)]
    '%'       [reduce using rule 68 (E)]
    $default  reduce using rule 68 (E)


State 94

   46 CMD_IF: TK_IF E TK_BEGIN . CMDS TK_END
   47       | TK_IF E TK_BEGIN . CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 123
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 95

   62 E: E TK_MAIG . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 124
    F         go to state 73
    NOME_VAR  go to state 74


State 96

   61 E: E TK_MEIG . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 125
    F         go to state 73
    NOME_VAR  go to state 74


State 97

   64 E: E TK_DIF . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 126
    F         go to state 73
    NOME_VAR  go to state 74


State 98

   63 E: E TK_EQUAL . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 127
    F         go to state 73
    NOME_VAR  go to state 74


State 99

   65 E: E TK_AND . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 128
    F         go to state 73
    NOME_VAR  go to state 74


State 100

   66 E: E TK_OR . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 129
    F         go to state 73
    NOME_VAR  go to state 74


State 101

   59 E: E '<' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 130
    F         go to state 73
    NOME_VAR  go to state 74


State 102

   60 E: E '>' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 131
    F         go to state 73
    NOME_VAR  go to state 74


State 103

   54 E: E '+' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 132
    F         go to state 73
    NOME_VAR  go to state 74


State 104

   55 E: E '-' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 133
    F         go to state 73
    NOME_VAR  go to state 74


State 105

   56 E: E '*' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 134
    F         go to state 73
    NOME_VAR  go to state 74


State 106

   57 E: E '/' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 135
    F         go to state 73
    NOME_VAR  go to state 74


State 107

   58 E: E '%' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 136
    F         go to state 73
    NOME_VAR  go to state 74


State 108

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB . E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 137
    F         go to state 73
    NOME_VAR  go to state 74


State 109

   51 ATRIB: TK_ID TK_ATRIB E .
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    $default  reduce using rule 51 (ATRIB)


State 110

   52 ATRIB: TK_ID '[' E . ']' TK_ATRIB E
   53      | TK_ID '[' E . ']' '[' E ']' TK_ATRIB E
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ']'       shift, and go to state 138
    '%'       shift, and go to state 107


State 111

   48 WRITELN: TK_WRITELN '(' E . ')'
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ')'       shift, and go to state 139
    '%'       shift, and go to state 107


State 112

   49 WRITE: TK_WRITE '(' E . ')'
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ')'       shift, and go to state 140
    '%'       shift, and go to state 107


State 113

   50 READ: TK_READ '(' NOME_VAR . ')'

    ')'  shift, and go to state 141


State 114

   34 CMDS: CMD ';' CMDS .

    $default  reduce using rule 34 (CMDS)


State 115

   10 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' .
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    '['  shift, and go to state 142

    $default  reduce using rule 10 (VAR)


State 116

   28 PARAMS: PARAM ',' PARAMS .

    $default  reduce using rule 28 (PARAMS)


State 117

   33 RETURN: TK_RETURN E . ';'
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ';'       shift, and go to state 143
    '%'       shift, and go to state 107


State 118

   24 CORPO: TK_BEGIN $@3 CMDS RETURN TK_END .

    $default  reduce using rule 24 (CORPO)


State 119

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E
   77 NOME_VAR: TK_ID '[' E . ']'
   78         | TK_ID '[' E . ']' '[' E ']'

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ']'       shift, and go to state 144
    '%'       shift, and go to state 107


State 120

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E
   75 EXPRS: E .

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    $default  reduce using rule 75 (EXPRS)


State 121

   74 EXPRS: EXPRS . ',' E
   79 NOME_VAR: TK_ID '(' EXPRS . ')'

    ','  shift, and go to state 145
    ')'  shift, and go to state 146


State 122

   67 E: '(' E ')' .

    $default  reduce using rule 67 (E)


State 123

   46 CMD_IF: TK_IF E TK_BEGIN CMDS . TK_END
   47       | TK_IF E TK_BEGIN CMDS . TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_END  shift, and go to state 147


State 124

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   62  | E TK_MAIG E .
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    '%'       [reduce using rule 62 (E)]
    $default  reduce using rule 62 (E)


State 125

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   61  | E TK_MEIG E .
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    '%'       [reduce using rule 61 (E)]
    $default  reduce using rule 61 (E)


State 126

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   64  | E TK_DIF E .
   65  | E . TK_AND E
   66  | E . TK_OR E

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    '%'       [reduce using rule 64 (E)]
    $default  reduce using rule 64 (E)


State 127

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   63  | E TK_EQUAL E .
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    '%'       [reduce using rule 63 (E)]
    $default  reduce using rule 63 (E)


State 128

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   65  | E TK_AND E .
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    '%'       [reduce using rule 65 (E)]
    $default  reduce using rule 65 (E)


State 129

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E
   66  | E TK_OR E .

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    '%'       [reduce using rule 66 (E)]
    $default  reduce using rule 66 (E)


State 130

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   59  | E '<' E .
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    '%'       [reduce using rule 59 (E)]
    $default  reduce using rule 59 (E)


State 131

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   60  | E '>' E .
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    '%'       [reduce using rule 60 (E)]
    $default  reduce using rule 60 (E)


State 132

   54 E: E . '+' E
   54  | E '+' E .
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    '%'       [reduce using rule 54 (E)]
    $default  reduce using rule 54 (E)


State 133

   54 E: E . '+' E
   55  | E . '-' E
   55  | E '-' E .
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107

    '%'       [reduce using rule 55 (E)]
    $default  reduce using rule 55 (E)


State 134

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   56  | E '*' E .
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '%'  shift, and go to state 107

    '%'       [reduce using rule 56 (E)]
    $default  reduce using rule 56 (E)


State 135

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   57  | E '/' E .
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    '%'  shift, and go to state 107

    '%'       [reduce using rule 57 (E)]
    $default  reduce using rule 57 (E)


State 136

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   58  | E '%' E .
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    TK_MAIG   [reduce using rule 58 (E)]
    TK_MEIG   [reduce using rule 58 (E)]
    TK_DIF    [reduce using rule 58 (E)]
    TK_EQUAL  [reduce using rule 58 (E)]
    TK_AND    [reduce using rule 58 (E)]
    TK_OR     [reduce using rule 58 (E)]
    '<'       [reduce using rule 58 (E)]
    '>'       [reduce using rule 58 (E)]
    '+'       [reduce using rule 58 (E)]
    '-'       [reduce using rule 58 (E)]
    '*'       [reduce using rule 58 (E)]
    '/'       [reduce using rule 58 (E)]
    '%'       [reduce using rule 58 (E)]
    $default  reduce using rule 58 (E)


State 137

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E . TK_PTPT E TK_BEGIN CMDS TK_END
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    TK_PTPT   shift, and go to state 148
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107


State 138

   52 ATRIB: TK_ID '[' E ']' . TK_ATRIB E
   53      | TK_ID '[' E ']' . '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 149
    '['       shift, and go to state 150


State 139

   48 WRITELN: TK_WRITELN '(' E ')' .

    $default  reduce using rule 48 (WRITELN)


State 140

   49 WRITE: TK_WRITE '(' E ')' .

    $default  reduce using rule 49 (WRITE)


State 141

   50 READ: TK_READ '(' NOME_VAR ')' .

    $default  reduce using rule 50 (READ)


State 142

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 151


State 143

   33 RETURN: TK_RETURN E ';' .

    $default  reduce using rule 33 (RETURN)


State 144

   77 NOME_VAR: TK_ID '[' E ']' .
   78         | TK_ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 152

    $default  reduce using rule 77 (NOME_VAR)


State 145

   74 EXPRS: EXPRS ',' . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 153
    F         go to state 73
    NOME_VAR  go to state 74


State 146

   79 NOME_VAR: TK_ID '(' EXPRS ')' .

    $default  reduce using rule 79 (NOME_VAR)


State 147

   46 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END .
   47       | TK_IF E TK_BEGIN CMDS TK_END . TK_ELSE TK_BEGIN CMDS TK_END

    TK_ELSE  shift, and go to state 154

    $default  reduce using rule 46 (CMD_IF)


State 148

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT . E TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 155
    F         go to state 73
    NOME_VAR  go to state 74


State 149

   52 ATRIB: TK_ID '[' E ']' TK_ATRIB . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 156
    F         go to state 73
    NOME_VAR  go to state 74


State 150

   53 ATRIB: TK_ID '[' E ']' '[' . E ']' TK_ATRIB E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 157
    F         go to state 73
    NOME_VAR  go to state 74


State 151

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']'

    TK_PTPT  shift, and go to state 158


State 152

   78 NOME_VAR: TK_ID '[' E ']' '[' . E ']'

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 159
    F         go to state 73
    NOME_VAR  go to state 74


State 153

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E
   74 EXPRS: EXPRS ',' E .

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    $default  reduce using rule 74 (EXPRS)


State 154

   47 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE . TK_BEGIN CMDS TK_END

    TK_BEGIN  shift, and go to state 160


State 155

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E . TK_BEGIN CMDS TK_END
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_BEGIN  shift, and go to state 161
    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107


State 156

   52 ATRIB: TK_ID '[' E ']' TK_ATRIB E .
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    $default  reduce using rule 52 (ATRIB)


State 157

   53 ATRIB: TK_ID '[' E ']' '[' E . ']' TK_ATRIB E
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ']'       shift, and go to state 162
    '%'       shift, and go to state 107


State 158

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 163


State 159

   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E
   78 NOME_VAR: TK_ID '[' E ']' '[' E . ']'

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    ']'       shift, and go to state 164
    '%'       shift, and go to state 107


State 160

   47 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 165
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 161

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 166
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 162

   53 ATRIB: TK_ID '[' E ']' '[' E ']' . TK_ATRIB E

    TK_ATRIB  shift, and go to state 167


State 163

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']'

    ']'  shift, and go to state 168


State 164

   78 NOME_VAR: TK_ID '[' E ']' '[' E ']' .

    $default  reduce using rule 78 (NOME_VAR)


State 165

   47 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 169


State 166

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 170


State 167

   53 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB . E

    TK_TEXTO    shift, and go to state 66
    TK_ID       shift, and go to state 67
    TK_INTEIRO  shift, and go to state 68
    TK_REAL     shift, and go to state 69
    '('         shift, and go to state 70
    '!'         shift, and go to state 71

    E         go to state 171
    F         go to state 73
    NOME_VAR  go to state 74


State 168

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' .

    $default  reduce using rule 11 (VAR)


State 169

   47 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END .

    $default  reduce using rule 47 (CMD_IF)


State 170

   45 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END .

    $default  reduce using rule 45 (CMD_FOR)


State 171

   53 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB E .
   54 E: E . '+' E
   55  | E . '-' E
   56  | E . '*' E
   57  | E . '/' E
   58  | E . '%' E
   59  | E . '<' E
   60  | E . '>' E
   61  | E . TK_MEIG E
   62  | E . TK_MAIG E
   63  | E . TK_EQUAL E
   64  | E . TK_DIF E
   65  | E . TK_AND E
   66  | E . TK_OR E

    TK_MAIG   shift, and go to state 95
    TK_MEIG   shift, and go to state 96
    TK_DIF    shift, and go to state 97
    TK_EQUAL  shift, and go to state 98
    TK_AND    shift, and go to state 99
    TK_OR     shift, and go to state 100
    '<'       shift, and go to state 101
    '>'       shift, and go to state 102
    '+'       shift, and go to state 103
    '-'       shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    '%'       shift, and go to state 107

    $default  reduce using rule 53 (ATRIB)

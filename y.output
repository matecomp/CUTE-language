Terminals unused in grammar

   TK_WHILE
   TK_DOWHILE
   TK_SWITCH
   TK_VOID


State 3 conflicts: 6 shift/reduce, 1 reduce/reduce
State 13 conflicts: 6 shift/reduce, 1 reduce/reduce
State 23 conflicts: 5 shift/reduce
State 96 conflicts: 13 shift/reduce


Grammar

    0 $accept: S $end

    1 S: PROGRAM DECLS MAIN

    2 PROGRAM: TK_PROGRAM TK_ID ';'

    3 DECLS: DECL DECLS
    4      | %empty

    5 DECL: VARS
    6     | FUNCTION

    7 VARS: VAR ';' VARS
    8     | %empty

    9 VAR: TIPO IDS
   10    | TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

   12 TIPO: TK_DOUBLE
   13     | TK_INT
   14     | TK_BOOL
   15     | TK_CHAR
   16     | TK_STRING

   17 IDS: IDS ',' TK_ID
   18    | TK_ID

   19 MAIN: TK_MBEGIN BLOCO TK_MEND

   20 $@1: %empty

   21 $@2: %empty

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO $@2

   23 $@3: %empty

   24 CORPO: TK_BEGIN $@3 CMDS RETURN TK_END

   25 CABECALHO: TIPO TK_ID OPC_PARAM

   26 OPC_PARAM: '(' PARAMS ')'
   27          | '(' ')'

   28 PARAMS: PARAM ',' PARAMS
   29       | PARAM

   30 PARAM: TIPO TK_ID
   31      | TIPO TK_ID '[' ']'
   32      | TIPO TK_ID '[' ']' '[' ']'
   33      | TIPO TK_REFERENCE TK_ID

   34 $@4: %empty

   35 BLOCO: TK_BEGIN $@4 CMDS TK_END

   36 RETURN: TK_RETURN E ';'

   37 CMDS: CMD ';' CMDS
   38     | LOOP CMDS
   39     | %empty

   40 CMD: WRITE
   41    | WRITELN
   42    | READ
   43    | ATRIB
   44    | BLOCO
   45    | VAR

   46 LOOP: CMD_IF
   47     | CMD_FOR

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

   49 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END
   50       | TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

   51 WRITELN: TK_WRITELN '(' E ')'

   52 WRITE: TK_WRITE '(' E ')'

   53 READ: TK_READ '(' NOME_VAR ')'

   54 ATRIB: TK_ID TK_ATRIB E
   55      | TK_ID '[' E ']' TK_ATRIB E
   56      | TK_ID '[' E ']' '[' E ']' TK_ATRIB E

   57 E: E '+' E
   58  | E '-' E
   59  | E '*' E
   60  | E '/' E
   61  | E '%' E
   62  | E '<' E
   63  | E '>' E
   64  | E TK_MEIG E
   65  | E TK_MAIG E
   66  | E TK_EQUAL E
   67  | E TK_DIF E
   68  | E TK_AND E
   69  | E TK_OR E
   70  | '(' E ')'
   71  | '!' E
   72  | F

   73 F: NOME_VAR
   74  | TK_INTEIRO
   75  | TK_REAL
   76  | TK_TEXTO
   77  | TK_ID '[' E ']'
   78  | TK_ID '[' E ']' '[' E ']'
   79  | TK_ID '(' EXPRS ')'
   80  | TK_ID '(' ')'

   81 EXPRS: EXPRS ',' E
   82      | E

   83 NOME_VAR: TK_ID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 71
'%' (37) 61
'(' (40) 26 27 51 52 53 70 79 80
')' (41) 26 27 51 52 53 70 79 80
'*' (42) 59
'+' (43) 57
',' (44) 17 28 81
'-' (45) 58
'/' (47) 60
';' (59) 2 7 36 37
'<' (60) 62
'>' (62) 63
'[' (91) 10 11 31 32 55 56 77 78
']' (93) 10 11 31 32 55 56 77 78
error (256)
TK_PROGRAM (258) 2
TK_BEGIN (259) 24 35 48 49 50
TK_END (260) 24 35 48 49 50
TK_MBEGIN (261) 19
TK_MEND (262) 19
TK_ATRIB (263) 48 54 55 56
TK_REFERENCE (264) 33
TK_IF (265) 49 50
TK_ELSE (266) 50
TK_MAIG (267) 65
TK_MEIG (268) 64
TK_DIF (269) 67
TK_EQUAL (270) 66
TK_AND (271) 68
TK_OR (272) 69
TK_FOR (273) 48
TK_WHILE (274)
TK_DOWHILE (275)
TK_SWITCH (276)
TK_FUNCTION (277) 22
TK_RETURN (278) 36
TK_PTPT (279) 10 11 48
TK_INT (280) 13
TK_CHAR (281) 15
TK_BOOL (282) 14
TK_DOUBLE (283) 12
TK_STRING (284) 16
TK_VOID (285)
TK_TEXTO (286) 76
TK_ID (287) 2 10 11 17 18 25 30 31 32 33 54 55 56 77 78 79 80 83
TK_INTEIRO (288) 10 11 74
TK_REAL (289) 75
TK_WRITELN (290) 51
TK_WRITE (291) 52
TK_READ (292) 53


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
S (53)
    on left: 1, on right: 0
PROGRAM (54)
    on left: 2, on right: 1
DECLS (55)
    on left: 3 4, on right: 1 3
DECL (56)
    on left: 5 6, on right: 3
VARS (57)
    on left: 7 8, on right: 5 7
VAR (58)
    on left: 9 10 11, on right: 7 45
TIPO (59)
    on left: 12 13 14 15 16, on right: 9 10 11 25 30 31 32 33
IDS (60)
    on left: 17 18, on right: 9 17
MAIN (61)
    on left: 19, on right: 1
FUNCTION (62)
    on left: 22, on right: 6
$@1 (63)
    on left: 20, on right: 22
$@2 (64)
    on left: 21, on right: 22
CORPO (65)
    on left: 24, on right: 22
$@3 (66)
    on left: 23, on right: 24
CABECALHO (67)
    on left: 25, on right: 22
OPC_PARAM (68)
    on left: 26 27, on right: 25
PARAMS (69)
    on left: 28 29, on right: 26 28
PARAM (70)
    on left: 30 31 32 33, on right: 28 29
BLOCO (71)
    on left: 35, on right: 19 44
$@4 (72)
    on left: 34, on right: 35
RETURN (73)
    on left: 36, on right: 24
CMDS (74)
    on left: 37 38 39, on right: 24 35 37 38 48 49 50
CMD (75)
    on left: 40 41 42 43 44 45, on right: 37
LOOP (76)
    on left: 46 47, on right: 38
CMD_FOR (77)
    on left: 48, on right: 47
CMD_IF (78)
    on left: 49 50, on right: 46
WRITELN (79)
    on left: 51, on right: 41
WRITE (80)
    on left: 52, on right: 40
READ (81)
    on left: 53, on right: 42
ATRIB (82)
    on left: 54 55 56, on right: 43
E (83)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72, on right:
    36 48 49 50 51 52 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 77 78 81 82
F (84)
    on left: 73 74 75 76 77 78 79 80, on right: 72
EXPRS (85)
    on left: 81 82, on right: 79 81
NOME_VAR (86)
    on left: 83, on right: 48 53 73


State 0

    0 $accept: . S $end

    TK_PROGRAM  shift, and go to state 1

    S        go to state 2
    PROGRAM  go to state 3


State 1

    2 PROGRAM: TK_PROGRAM . TK_ID ';'

    TK_ID  shift, and go to state 4


State 2

    0 $accept: S . $end

    $end  shift, and go to state 5


State 3

    1 S: PROGRAM . DECLS MAIN

    TK_FUNCTION  shift, and go to state 6
    TK_INT       shift, and go to state 7
    TK_CHAR      shift, and go to state 8
    TK_BOOL      shift, and go to state 9
    TK_DOUBLE    shift, and go to state 10
    TK_STRING    shift, and go to state 11

    TK_MBEGIN    reduce using rule 4 (DECLS)
    TK_MBEGIN    [reduce using rule 8 (VARS)]
    TK_FUNCTION  [reduce using rule 8 (VARS)]
    TK_INT       [reduce using rule 8 (VARS)]
    TK_CHAR      [reduce using rule 8 (VARS)]
    TK_BOOL      [reduce using rule 8 (VARS)]
    TK_DOUBLE    [reduce using rule 8 (VARS)]
    TK_STRING    [reduce using rule 8 (VARS)]
    $default     reduce using rule 4 (DECLS)

    DECLS     go to state 12
    DECL      go to state 13
    VARS      go to state 14
    VAR       go to state 15
    TIPO      go to state 16
    FUNCTION  go to state 17


State 4

    2 PROGRAM: TK_PROGRAM TK_ID . ';'

    ';'  shift, and go to state 18


State 5

    0 $accept: S $end .

    $default  accept


State 6

   22 FUNCTION: TK_FUNCTION . $@1 CABECALHO CORPO $@2

    $default  reduce using rule 20 ($@1)

    $@1  go to state 19


State 7

   13 TIPO: TK_INT .

    $default  reduce using rule 13 (TIPO)


State 8

   15 TIPO: TK_CHAR .

    $default  reduce using rule 15 (TIPO)


State 9

   14 TIPO: TK_BOOL .

    $default  reduce using rule 14 (TIPO)


State 10

   12 TIPO: TK_DOUBLE .

    $default  reduce using rule 12 (TIPO)


State 11

   16 TIPO: TK_STRING .

    $default  reduce using rule 16 (TIPO)


State 12

    1 S: PROGRAM DECLS . MAIN

    TK_MBEGIN  shift, and go to state 20

    MAIN  go to state 21


State 13

    3 DECLS: DECL . DECLS

    TK_FUNCTION  shift, and go to state 6
    TK_INT       shift, and go to state 7
    TK_CHAR      shift, and go to state 8
    TK_BOOL      shift, and go to state 9
    TK_DOUBLE    shift, and go to state 10
    TK_STRING    shift, and go to state 11

    TK_MBEGIN    reduce using rule 4 (DECLS)
    TK_MBEGIN    [reduce using rule 8 (VARS)]
    TK_FUNCTION  [reduce using rule 8 (VARS)]
    TK_INT       [reduce using rule 8 (VARS)]
    TK_CHAR      [reduce using rule 8 (VARS)]
    TK_BOOL      [reduce using rule 8 (VARS)]
    TK_DOUBLE    [reduce using rule 8 (VARS)]
    TK_STRING    [reduce using rule 8 (VARS)]
    $default     reduce using rule 4 (DECLS)

    DECLS     go to state 22
    DECL      go to state 13
    VARS      go to state 14
    VAR       go to state 15
    TIPO      go to state 16
    FUNCTION  go to state 17


State 14

    5 DECL: VARS .

    $default  reduce using rule 5 (DECL)


State 15

    7 VARS: VAR . ';' VARS

    ';'  shift, and go to state 23


State 16

    9 VAR: TIPO . IDS
   10    | TIPO . TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO . TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_ID  shift, and go to state 24

    IDS  go to state 25


State 17

    6 DECL: FUNCTION .

    $default  reduce using rule 6 (DECL)


State 18

    2 PROGRAM: TK_PROGRAM TK_ID ';' .

    $default  reduce using rule 2 (PROGRAM)


State 19

   22 FUNCTION: TK_FUNCTION $@1 . CABECALHO CORPO $@2

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO       go to state 26
    CABECALHO  go to state 27


State 20

   19 MAIN: TK_MBEGIN . BLOCO TK_MEND

    TK_BEGIN  shift, and go to state 28

    BLOCO  go to state 29


State 21

    1 S: PROGRAM DECLS MAIN .

    $default  reduce using rule 1 (S)


State 22

    3 DECLS: DECL DECLS .

    $default  reduce using rule 3 (DECLS)


State 23

    7 VARS: VAR ';' . VARS

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TK_INT     [reduce using rule 8 (VARS)]
    TK_CHAR    [reduce using rule 8 (VARS)]
    TK_BOOL    [reduce using rule 8 (VARS)]
    TK_DOUBLE  [reduce using rule 8 (VARS)]
    TK_STRING  [reduce using rule 8 (VARS)]
    $default   reduce using rule 8 (VARS)

    VARS  go to state 30
    VAR   go to state 15
    TIPO  go to state 16


State 24

   10 VAR: TIPO TK_ID . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO TK_ID . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   18 IDS: TK_ID .

    '['  shift, and go to state 31

    $default  reduce using rule 18 (IDS)


State 25

    9 VAR: TIPO IDS .
   17 IDS: IDS . ',' TK_ID

    ','  shift, and go to state 32

    $default  reduce using rule 9 (VAR)


State 26

   25 CABECALHO: TIPO . TK_ID OPC_PARAM

    TK_ID  shift, and go to state 33


State 27

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO . CORPO $@2

    TK_BEGIN  shift, and go to state 34

    CORPO  go to state 35


State 28

   35 BLOCO: TK_BEGIN . $@4 CMDS TK_END

    $default  reduce using rule 34 ($@4)

    $@4  go to state 36


State 29

   19 MAIN: TK_MBEGIN BLOCO . TK_MEND

    TK_MEND  shift, and go to state 37


State 30

    7 VARS: VAR ';' VARS .

    $default  reduce using rule 7 (VARS)


State 31

   10 VAR: TIPO TK_ID '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO TK_ID '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 38


State 32

   17 IDS: IDS ',' . TK_ID

    TK_ID  shift, and go to state 39


State 33

   25 CABECALHO: TIPO TK_ID . OPC_PARAM

    '('  shift, and go to state 40

    OPC_PARAM  go to state 41


State 34

   24 CORPO: TK_BEGIN . $@3 CMDS RETURN TK_END

    $default  reduce using rule 23 ($@3)

    $@3  go to state 42


State 35

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO . $@2

    $default  reduce using rule 21 ($@2)

    $@2  go to state 43


State 36

   35 BLOCO: TK_BEGIN $@4 . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 39 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 52
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 37

   19 MAIN: TK_MBEGIN BLOCO TK_MEND .

    $default  reduce using rule 19 (MAIN)


State 38

   10 VAR: TIPO TK_ID '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']'
   11    | TIPO TK_ID '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_PTPT  shift, and go to state 61


State 39

   17 IDS: IDS ',' TK_ID .

    $default  reduce using rule 17 (IDS)


State 40

   26 OPC_PARAM: '(' . PARAMS ')'
   27          | '(' . ')'

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11
    ')'        shift, and go to state 62

    TIPO    go to state 63
    PARAMS  go to state 64
    PARAM   go to state 65


State 41

   25 CABECALHO: TIPO TK_ID OPC_PARAM .

    $default  reduce using rule 25 (CABECALHO)


State 42

   24 CORPO: TK_BEGIN $@3 . CMDS RETURN TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 39 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 66
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 43

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO $@2 .

    $default  reduce using rule 22 (FUNCTION)


State 44

   49 CMD_IF: TK_IF . E TK_BEGIN CMDS TK_END
   50       | TK_IF . E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 73
    F         go to state 74
    NOME_VAR  go to state 75


State 45

   48 CMD_FOR: TK_FOR . NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_ID  shift, and go to state 76

    NOME_VAR  go to state 77


State 46

   54 ATRIB: TK_ID . TK_ATRIB E
   55      | TK_ID . '[' E ']' TK_ATRIB E
   56      | TK_ID . '[' E ']' '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 78
    '['       shift, and go to state 79


State 47

   51 WRITELN: TK_WRITELN . '(' E ')'

    '('  shift, and go to state 80


State 48

   52 WRITE: TK_WRITE . '(' E ')'

    '('  shift, and go to state 81


State 49

   53 READ: TK_READ . '(' NOME_VAR ')'

    '('  shift, and go to state 82


State 50

   45 CMD: VAR .

    $default  reduce using rule 45 (CMD)


State 51

   44 CMD: BLOCO .

    $default  reduce using rule 44 (CMD)


State 52

   35 BLOCO: TK_BEGIN $@4 CMDS . TK_END

    TK_END  shift, and go to state 83


State 53

   37 CMDS: CMD . ';' CMDS

    ';'  shift, and go to state 84


State 54

   38 CMDS: LOOP . CMDS

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 39 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 85
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 55

   47 LOOP: CMD_FOR .

    $default  reduce using rule 47 (LOOP)


State 56

   46 LOOP: CMD_IF .

    $default  reduce using rule 46 (LOOP)


State 57

   41 CMD: WRITELN .

    $default  reduce using rule 41 (CMD)


State 58

   40 CMD: WRITE .

    $default  reduce using rule 40 (CMD)


State 59

   42 CMD: READ .

    $default  reduce using rule 42 (CMD)


State 60

   43 CMD: ATRIB .

    $default  reduce using rule 43 (CMD)


State 61

   10 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']'
   11    | TIPO TK_ID '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 86


State 62

   27 OPC_PARAM: '(' ')' .

    $default  reduce using rule 27 (OPC_PARAM)


State 63

   30 PARAM: TIPO . TK_ID
   31      | TIPO . TK_ID '[' ']'
   32      | TIPO . TK_ID '[' ']' '[' ']'
   33      | TIPO . TK_REFERENCE TK_ID

    TK_REFERENCE  shift, and go to state 87
    TK_ID         shift, and go to state 88


State 64

   26 OPC_PARAM: '(' PARAMS . ')'

    ')'  shift, and go to state 89


State 65

   28 PARAMS: PARAM . ',' PARAMS
   29       | PARAM .

    ','  shift, and go to state 90

    $default  reduce using rule 29 (PARAMS)


State 66

   24 CORPO: TK_BEGIN $@3 CMDS . RETURN TK_END

    TK_RETURN  shift, and go to state 91

    RETURN  go to state 92


State 67

   76 F: TK_TEXTO .

    $default  reduce using rule 76 (F)


State 68

   77 F: TK_ID . '[' E ']'
   78  | TK_ID . '[' E ']' '[' E ']'
   79  | TK_ID . '(' EXPRS ')'
   80  | TK_ID . '(' ')'
   83 NOME_VAR: TK_ID .

    '['  shift, and go to state 93
    '('  shift, and go to state 94

    $default  reduce using rule 83 (NOME_VAR)


State 69

   74 F: TK_INTEIRO .

    $default  reduce using rule 74 (F)


State 70

   75 F: TK_REAL .

    $default  reduce using rule 75 (F)


State 71

   70 E: '(' . E ')'

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 95
    F         go to state 74
    NOME_VAR  go to state 75


State 72

   71 E: '!' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 96
    F         go to state 74
    NOME_VAR  go to state 75


State 73

   49 CMD_IF: TK_IF E . TK_BEGIN CMDS TK_END
   50       | TK_IF E . TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_BEGIN  shift, and go to state 97
    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110


State 74

   72 E: F .

    $default  reduce using rule 72 (E)


State 75

   73 F: NOME_VAR .

    $default  reduce using rule 73 (F)


State 76

   83 NOME_VAR: TK_ID .

    $default  reduce using rule 83 (NOME_VAR)


State 77

   48 CMD_FOR: TK_FOR NOME_VAR . TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_ATRIB  shift, and go to state 111


State 78

   54 ATRIB: TK_ID TK_ATRIB . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 112
    F         go to state 74
    NOME_VAR  go to state 75


State 79

   55 ATRIB: TK_ID '[' . E ']' TK_ATRIB E
   56      | TK_ID '[' . E ']' '[' E ']' TK_ATRIB E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 113
    F         go to state 74
    NOME_VAR  go to state 75


State 80

   51 WRITELN: TK_WRITELN '(' . E ')'

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 114
    F         go to state 74
    NOME_VAR  go to state 75


State 81

   52 WRITE: TK_WRITE '(' . E ')'

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 115
    F         go to state 74
    NOME_VAR  go to state 75


State 82

   53 READ: TK_READ '(' . NOME_VAR ')'

    TK_ID  shift, and go to state 76

    NOME_VAR  go to state 116


State 83

   35 BLOCO: TK_BEGIN $@4 CMDS TK_END .

    $default  reduce using rule 35 (BLOCO)


State 84

   37 CMDS: CMD ';' . CMDS

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 39 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 117
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 85

   38 CMDS: LOOP CMDS .

    $default  reduce using rule 38 (CMDS)


State 86

   10 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']'
   11    | TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    ']'  shift, and go to state 118


State 87

   33 PARAM: TIPO TK_REFERENCE . TK_ID

    TK_ID  shift, and go to state 119


State 88

   30 PARAM: TIPO TK_ID .
   31      | TIPO TK_ID . '[' ']'
   32      | TIPO TK_ID . '[' ']' '[' ']'

    '['  shift, and go to state 120

    $default  reduce using rule 30 (PARAM)


State 89

   26 OPC_PARAM: '(' PARAMS ')' .

    $default  reduce using rule 26 (OPC_PARAM)


State 90

   28 PARAMS: PARAM ',' . PARAMS

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO    go to state 63
    PARAMS  go to state 121
    PARAM   go to state 65


State 91

   36 RETURN: TK_RETURN . E ';'

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 122
    F         go to state 74
    NOME_VAR  go to state 75


State 92

   24 CORPO: TK_BEGIN $@3 CMDS RETURN . TK_END

    TK_END  shift, and go to state 123


State 93

   77 F: TK_ID '[' . E ']'
   78  | TK_ID '[' . E ']' '[' E ']'

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 124
    F         go to state 74
    NOME_VAR  go to state 75


State 94

   79 F: TK_ID '(' . EXPRS ')'
   80  | TK_ID '(' . ')'

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    ')'         shift, and go to state 125
    '!'         shift, and go to state 72

    E         go to state 126
    F         go to state 74
    EXPRS     go to state 127
    NOME_VAR  go to state 75


State 95

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E
   70  | '(' E . ')'

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ')'       shift, and go to state 128


State 96

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E
   71  | '!' E .

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    TK_MAIG   [reduce using rule 71 (E)]
    TK_MEIG   [reduce using rule 71 (E)]
    TK_DIF    [reduce using rule 71 (E)]
    TK_EQUAL  [reduce using rule 71 (E)]
    TK_AND    [reduce using rule 71 (E)]
    TK_OR     [reduce using rule 71 (E)]
    '<'       [reduce using rule 71 (E)]
    '>'       [reduce using rule 71 (E)]
    '+'       [reduce using rule 71 (E)]
    '-'       [reduce using rule 71 (E)]
    '*'       [reduce using rule 71 (E)]
    '/'       [reduce using rule 71 (E)]
    '%'       [reduce using rule 71 (E)]
    $default  reduce using rule 71 (E)


State 97

   49 CMD_IF: TK_IF E TK_BEGIN . CMDS TK_END
   50       | TK_IF E TK_BEGIN . CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 39 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 129
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 98

   65 E: E TK_MAIG . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 130
    F         go to state 74
    NOME_VAR  go to state 75


State 99

   64 E: E TK_MEIG . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 131
    F         go to state 74
    NOME_VAR  go to state 75


State 100

   67 E: E TK_DIF . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 132
    F         go to state 74
    NOME_VAR  go to state 75


State 101

   66 E: E TK_EQUAL . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 133
    F         go to state 74
    NOME_VAR  go to state 75


State 102

   68 E: E TK_AND . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 134
    F         go to state 74
    NOME_VAR  go to state 75


State 103

   69 E: E TK_OR . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 135
    F         go to state 74
    NOME_VAR  go to state 75


State 104

   62 E: E '<' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 136
    F         go to state 74
    NOME_VAR  go to state 75


State 105

   63 E: E '>' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 137
    F         go to state 74
    NOME_VAR  go to state 75


State 106

   57 E: E '+' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 138
    F         go to state 74
    NOME_VAR  go to state 75


State 107

   58 E: E '-' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 139
    F         go to state 74
    NOME_VAR  go to state 75


State 108

   59 E: E '*' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 140
    F         go to state 74
    NOME_VAR  go to state 75


State 109

   60 E: E '/' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 141
    F         go to state 74
    NOME_VAR  go to state 75


State 110

   61 E: E '%' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 142
    F         go to state 74
    NOME_VAR  go to state 75


State 111

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB . E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 143
    F         go to state 74
    NOME_VAR  go to state 75


State 112

   54 ATRIB: TK_ID TK_ATRIB E .
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 54 (ATRIB)


State 113

   55 ATRIB: TK_ID '[' E . ']' TK_ATRIB E
   56      | TK_ID '[' E . ']' '[' E ']' TK_ATRIB E
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ']'       shift, and go to state 144


State 114

   51 WRITELN: TK_WRITELN '(' E . ')'
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ')'       shift, and go to state 145


State 115

   52 WRITE: TK_WRITE '(' E . ')'
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ')'       shift, and go to state 146


State 116

   53 READ: TK_READ '(' NOME_VAR . ')'

    ')'  shift, and go to state 147


State 117

   37 CMDS: CMD ';' CMDS .

    $default  reduce using rule 37 (CMDS)


State 118

   10 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' .
   11    | TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    '['  shift, and go to state 148

    $default  reduce using rule 10 (VAR)


State 119

   33 PARAM: TIPO TK_REFERENCE TK_ID .

    $default  reduce using rule 33 (PARAM)


State 120

   31 PARAM: TIPO TK_ID '[' . ']'
   32      | TIPO TK_ID '[' . ']' '[' ']'

    ']'  shift, and go to state 149


State 121

   28 PARAMS: PARAM ',' PARAMS .

    $default  reduce using rule 28 (PARAMS)


State 122

   36 RETURN: TK_RETURN E . ';'
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ';'       shift, and go to state 150


State 123

   24 CORPO: TK_BEGIN $@3 CMDS RETURN TK_END .

    $default  reduce using rule 24 (CORPO)


State 124

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E
   77 F: TK_ID '[' E . ']'
   78  | TK_ID '[' E . ']' '[' E ']'

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ']'       shift, and go to state 151


State 125

   80 F: TK_ID '(' ')' .

    $default  reduce using rule 80 (F)


State 126

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E
   82 EXPRS: E .

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 82 (EXPRS)


State 127

   79 F: TK_ID '(' EXPRS . ')'
   81 EXPRS: EXPRS . ',' E

    ','  shift, and go to state 152
    ')'  shift, and go to state 153


State 128

   70 E: '(' E ')' .

    $default  reduce using rule 70 (E)


State 129

   49 CMD_IF: TK_IF E TK_BEGIN CMDS . TK_END
   50       | TK_IF E TK_BEGIN CMDS . TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_END  shift, and go to state 154


State 130

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   65  | E TK_MAIG E .
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 65 (E)


State 131

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   64  | E TK_MEIG E .
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 64 (E)


State 132

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   67  | E TK_DIF E .
   68  | E . TK_AND E
   69  | E . TK_OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 67 (E)


State 133

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   66  | E TK_EQUAL E .
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 66 (E)


State 134

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   68  | E TK_AND E .
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 68 (E)


State 135

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E
   69  | E TK_OR E .

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 69 (E)


State 136

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   62  | E '<' E .
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 62 (E)


State 137

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   63  | E '>' E .
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    TK_MAIG   error (nonassociative)
    TK_MEIG   error (nonassociative)
    TK_DIF    error (nonassociative)
    TK_EQUAL  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 63 (E)


State 138

   57 E: E . '+' E
   57  | E '+' E .
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 57 (E)


State 139

   57 E: E . '+' E
   58  | E . '-' E
   58  | E '-' E .
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 58 (E)


State 140

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   59  | E '*' E .
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    $default  reduce using rule 59 (E)


State 141

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   60  | E '/' E .
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    $default  reduce using rule 60 (E)


State 142

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   61  | E '%' E .
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    $default  reduce using rule 61 (E)


State 143

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E . TK_PTPT E TK_BEGIN CMDS TK_END
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    TK_PTPT   shift, and go to state 155
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110


State 144

   55 ATRIB: TK_ID '[' E ']' . TK_ATRIB E
   56      | TK_ID '[' E ']' . '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 156
    '['       shift, and go to state 157


State 145

   51 WRITELN: TK_WRITELN '(' E ')' .

    $default  reduce using rule 51 (WRITELN)


State 146

   52 WRITE: TK_WRITE '(' E ')' .

    $default  reduce using rule 52 (WRITE)


State 147

   53 READ: TK_READ '(' NOME_VAR ')' .

    $default  reduce using rule 53 (READ)


State 148

   11 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 158


State 149

   31 PARAM: TIPO TK_ID '[' ']' .
   32      | TIPO TK_ID '[' ']' . '[' ']'

    '['  shift, and go to state 159

    $default  reduce using rule 31 (PARAM)


State 150

   36 RETURN: TK_RETURN E ';' .

    $default  reduce using rule 36 (RETURN)


State 151

   77 F: TK_ID '[' E ']' .
   78  | TK_ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 160

    $default  reduce using rule 77 (F)


State 152

   81 EXPRS: EXPRS ',' . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 161
    F         go to state 74
    NOME_VAR  go to state 75


State 153

   79 F: TK_ID '(' EXPRS ')' .

    $default  reduce using rule 79 (F)


State 154

   49 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END .
   50       | TK_IF E TK_BEGIN CMDS TK_END . TK_ELSE TK_BEGIN CMDS TK_END

    TK_ELSE  shift, and go to state 162

    $default  reduce using rule 49 (CMD_IF)


State 155

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT . E TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 163
    F         go to state 74
    NOME_VAR  go to state 75


State 156

   55 ATRIB: TK_ID '[' E ']' TK_ATRIB . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 164
    F         go to state 74
    NOME_VAR  go to state 75


State 157

   56 ATRIB: TK_ID '[' E ']' '[' . E ']' TK_ATRIB E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 165
    F         go to state 74
    NOME_VAR  go to state 75


State 158

   11 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']'

    TK_PTPT  shift, and go to state 166


State 159

   32 PARAM: TIPO TK_ID '[' ']' '[' . ']'

    ']'  shift, and go to state 167


State 160

   78 F: TK_ID '[' E ']' '[' . E ']'

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 168
    F         go to state 74
    NOME_VAR  go to state 75


State 161

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E
   81 EXPRS: EXPRS ',' E .

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 81 (EXPRS)


State 162

   50 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE . TK_BEGIN CMDS TK_END

    TK_BEGIN  shift, and go to state 169


State 163

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E . TK_BEGIN CMDS TK_END
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_BEGIN  shift, and go to state 170
    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110


State 164

   55 ATRIB: TK_ID '[' E ']' TK_ATRIB E .
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 55 (ATRIB)


State 165

   56 ATRIB: TK_ID '[' E ']' '[' E . ']' TK_ATRIB E
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ']'       shift, and go to state 171


State 166

   11 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 172


State 167

   32 PARAM: TIPO TK_ID '[' ']' '[' ']' .

    $default  reduce using rule 32 (PARAM)


State 168

   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E
   78 F: TK_ID '[' E ']' '[' E . ']'

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110
    ']'       shift, and go to state 173


State 169

   50 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 39 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 174
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 170

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48
    TK_READ     shift, and go to state 49

    $default  reduce using rule 39 (CMDS)

    VAR      go to state 50
    TIPO     go to state 16
    BLOCO    go to state 51
    CMDS     go to state 175
    CMD      go to state 53
    LOOP     go to state 54
    CMD_FOR  go to state 55
    CMD_IF   go to state 56
    WRITELN  go to state 57
    WRITE    go to state 58
    READ     go to state 59
    ATRIB    go to state 60


State 171

   56 ATRIB: TK_ID '[' E ']' '[' E ']' . TK_ATRIB E

    TK_ATRIB  shift, and go to state 176


State 172

   11 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']'

    ']'  shift, and go to state 177


State 173

   78 F: TK_ID '[' E ']' '[' E ']' .

    $default  reduce using rule 78 (F)


State 174

   50 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 178


State 175

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 179


State 176

   56 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB . E

    TK_TEXTO    shift, and go to state 67
    TK_ID       shift, and go to state 68
    TK_INTEIRO  shift, and go to state 69
    TK_REAL     shift, and go to state 70
    '('         shift, and go to state 71
    '!'         shift, and go to state 72

    E         go to state 180
    F         go to state 74
    NOME_VAR  go to state 75


State 177

   11 VAR: TIPO TK_ID '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' .

    $default  reduce using rule 11 (VAR)


State 178

   50 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END .

    $default  reduce using rule 50 (CMD_IF)


State 179

   48 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END .

    $default  reduce using rule 48 (CMD_FOR)


State 180

   56 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB E .
   57 E: E . '+' E
   58  | E . '-' E
   59  | E . '*' E
   60  | E . '/' E
   61  | E . '%' E
   62  | E . '<' E
   63  | E . '>' E
   64  | E . TK_MEIG E
   65  | E . TK_MAIG E
   66  | E . TK_EQUAL E
   67  | E . TK_DIF E
   68  | E . TK_AND E
   69  | E . TK_OR E

    TK_MAIG   shift, and go to state 98
    TK_MEIG   shift, and go to state 99
    TK_DIF    shift, and go to state 100
    TK_EQUAL  shift, and go to state 101
    TK_AND    shift, and go to state 102
    TK_OR     shift, and go to state 103
    '<'       shift, and go to state 104
    '>'       shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    '*'       shift, and go to state 108
    '/'       shift, and go to state 109
    '%'       shift, and go to state 110

    $default  reduce using rule 56 (ATRIB)

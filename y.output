Terminals unused in grammar

   TK_WHILE
   TK_DOWHILE
   TK_SWITCH
   '='


State 3 conflicts: 6 shift/reduce, 1 reduce/reduce
State 13 conflicts: 6 shift/reduce, 1 reduce/reduce
State 23 conflicts: 5 shift/reduce
State 117 conflicts: 2 shift/reduce
State 118 conflicts: 2 shift/reduce
State 119 conflicts: 2 shift/reduce
State 120 conflicts: 12 shift/reduce
State 121 conflicts: 2 shift/reduce
State 122 conflicts: 12 shift/reduce
State 123 conflicts: 2 shift/reduce
State 124 conflicts: 2 shift/reduce
State 125 conflicts: 2 shift/reduce
State 126 conflicts: 2 shift/reduce
State 127 conflicts: 2 shift/reduce
State 128 conflicts: 2 shift/reduce


Grammar

    0 $accept: S $end

    1 S: PROGRAM DECLS MAIN

    2 PROGRAM: TK_PROGRAM TK_ID ';'

    3 DECLS: DECL DECLS
    4      | %empty

    5 DECL: VARS
    6     | FUNCTION

    7 VARS: VAR ';' VARS
    8     | %empty

    9 VAR: TIPO IDS
   10    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

   12 TIPO: TK_DOUBLE
   13     | TK_INT
   14     | TK_BOOL
   15     | TK_CHAR
   16     | TK_STRING

   17 IDS: IDS ',' TK_ID
   18    | TK_ID

   19 MAIN: TK_MBEGIN BLOCO TK_MEND

   20 $@1: %empty

   21 $@2: %empty

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO $@2

   23 $@3: %empty

   24 CORPO: TK_BEGIN $@3 CMDS RETURN TK_END

   25 CABECALHO: TIPO TK_ID OPC_PARAM

   26 OPC_PARAM: '(' PARAMS ')'
   27          | %empty

   28 PARAMS: PARAM ',' PARAMS
   29       | PARAM

   30 PARAM: TIPO TK_ID

   31 $@4: %empty

   32 BLOCO: TK_BEGIN $@4 CMDS TK_END

   33 RETURN: TK_RETURN E ';'

   34 CMDS: CMD ';' CMDS
   35     | LOOP CMDS
   36     | %empty

   37 CMD: WRITE
   38    | WRITELN
   39    | ATRIB
   40    | BLOCO
   41    | VAR

   42 LOOP: CMD_IF
   43     | CMD_FOR

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

   45 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END
   46       | TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

   47 WRITELN: TK_WRITELN '(' E ')'

   48 WRITE: TK_WRITE '(' E ')'

   49 ATRIB: TK_ID TK_ATRIB E
   50      | TK_ID '[' E ']' TK_ATRIB E
   51      | TK_ID '[' E ']' '[' E ']' TK_ATRIB E

   52 E: E '+' E
   53  | E '-' E
   54  | E '*' E
   55  | E '/' E
   56  | E '<' E
   57  | E '>' E
   58  | E TK_MEIG E
   59  | E TK_MAIG E
   60  | E TK_EQUAL E
   61  | E TK_DIF E
   62  | E TK_AND E
   63  | E TK_OR E
   64  | '(' E ')'
   65  | F

   66 F: NOME_VAR
   67  | TK_INTEIRO
   68  | TK_REAL
   69  | TK_TEXTO

   70 EXPRS: EXPRS ',' E
   71      | E

   72 NOME_VAR: TK_ID
   73         | TK_ID '[' E ']'
   74         | TK_ID '[' E ']' '[' E ']'
   75         | TK_ID '(' EXPRS ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26 47 48 64 75
')' (41) 26 47 48 64 75
'*' (42) 54
'+' (43) 52
',' (44) 17 28 70
'-' (45) 53
'/' (47) 55
';' (59) 2 7 33 34
'<' (60) 56
'=' (61)
'>' (62) 57
'[' (91) 10 11 50 51 73 74
']' (93) 10 11 50 51 73 74
error (256)
TK_PROGRAM (258) 2
TK_BEGIN (259) 24 32 44 45 46
TK_END (260) 24 32 44 45 46
TK_MBEGIN (261) 19
TK_MEND (262) 19
TK_ATRIB (263) 44 49 50 51
TK_IF (264) 45 46
TK_ELSE (265) 46
TK_MAIG (266) 59
TK_MEIG (267) 58
TK_DIF (268) 61
TK_EQUAL (269) 60
TK_AND (270) 62
TK_OR (271) 63
TK_FOR (272) 44
TK_WHILE (273)
TK_DOWHILE (274)
TK_SWITCH (275)
TK_FUNCTION (276) 22
TK_RETURN (277) 33
TK_PTPT (278) 10 11 44
TK_INT (279) 13
TK_CHAR (280) 15
TK_BOOL (281) 14
TK_DOUBLE (282) 12
TK_STRING (283) 16
TK_TEXTO (284) 69
TK_ID (285) 2 17 18 25 30 49 50 51 72 73 74 75
TK_INTEIRO (286) 10 11 67
TK_REAL (287) 68
TK_WRITELN (288) 47
TK_WRITE (289) 48


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
S (49)
    on left: 1, on right: 0
PROGRAM (50)
    on left: 2, on right: 1
DECLS (51)
    on left: 3 4, on right: 1 3
DECL (52)
    on left: 5 6, on right: 3
VARS (53)
    on left: 7 8, on right: 5 7
VAR (54)
    on left: 9 10 11, on right: 7 41
TIPO (55)
    on left: 12 13 14 15 16, on right: 9 10 11 25 30
IDS (56)
    on left: 17 18, on right: 9 10 11 17
MAIN (57)
    on left: 19, on right: 1
FUNCTION (58)
    on left: 22, on right: 6
$@1 (59)
    on left: 20, on right: 22
$@2 (60)
    on left: 21, on right: 22
CORPO (61)
    on left: 24, on right: 22
$@3 (62)
    on left: 23, on right: 24
CABECALHO (63)
    on left: 25, on right: 22
OPC_PARAM (64)
    on left: 26 27, on right: 25
PARAMS (65)
    on left: 28 29, on right: 26 28
PARAM (66)
    on left: 30, on right: 28 29
BLOCO (67)
    on left: 32, on right: 19 40
$@4 (68)
    on left: 31, on right: 32
RETURN (69)
    on left: 33, on right: 24
CMDS (70)
    on left: 34 35 36, on right: 24 32 34 35 44 45 46
CMD (71)
    on left: 37 38 39 40 41, on right: 34
LOOP (72)
    on left: 42 43, on right: 35
CMD_FOR (73)
    on left: 44, on right: 43
CMD_IF (74)
    on left: 45 46, on right: 42
WRITELN (75)
    on left: 47, on right: 38
WRITE (76)
    on left: 48, on right: 37
ATRIB (77)
    on left: 49 50 51, on right: 39
E (78)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65, on right: 33
    44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    70 71 73 74
F (79)
    on left: 66 67 68 69, on right: 65
EXPRS (80)
    on left: 70 71, on right: 70 75
NOME_VAR (81)
    on left: 72 73 74 75, on right: 44 66


State 0

    0 $accept: . S $end

    TK_PROGRAM  shift, and go to state 1

    S        go to state 2
    PROGRAM  go to state 3


State 1

    2 PROGRAM: TK_PROGRAM . TK_ID ';'

    TK_ID  shift, and go to state 4


State 2

    0 $accept: S . $end

    $end  shift, and go to state 5


State 3

    1 S: PROGRAM . DECLS MAIN

    TK_FUNCTION  shift, and go to state 6
    TK_INT       shift, and go to state 7
    TK_CHAR      shift, and go to state 8
    TK_BOOL      shift, and go to state 9
    TK_DOUBLE    shift, and go to state 10
    TK_STRING    shift, and go to state 11

    TK_MBEGIN    reduce using rule 4 (DECLS)
    TK_MBEGIN    [reduce using rule 8 (VARS)]
    TK_FUNCTION  [reduce using rule 8 (VARS)]
    TK_INT       [reduce using rule 8 (VARS)]
    TK_CHAR      [reduce using rule 8 (VARS)]
    TK_BOOL      [reduce using rule 8 (VARS)]
    TK_DOUBLE    [reduce using rule 8 (VARS)]
    TK_STRING    [reduce using rule 8 (VARS)]
    $default     reduce using rule 4 (DECLS)

    DECLS     go to state 12
    DECL      go to state 13
    VARS      go to state 14
    VAR       go to state 15
    TIPO      go to state 16
    FUNCTION  go to state 17


State 4

    2 PROGRAM: TK_PROGRAM TK_ID . ';'

    ';'  shift, and go to state 18


State 5

    0 $accept: S $end .

    $default  accept


State 6

   22 FUNCTION: TK_FUNCTION . $@1 CABECALHO CORPO $@2

    $default  reduce using rule 20 ($@1)

    $@1  go to state 19


State 7

   13 TIPO: TK_INT .

    $default  reduce using rule 13 (TIPO)


State 8

   15 TIPO: TK_CHAR .

    $default  reduce using rule 15 (TIPO)


State 9

   14 TIPO: TK_BOOL .

    $default  reduce using rule 14 (TIPO)


State 10

   12 TIPO: TK_DOUBLE .

    $default  reduce using rule 12 (TIPO)


State 11

   16 TIPO: TK_STRING .

    $default  reduce using rule 16 (TIPO)


State 12

    1 S: PROGRAM DECLS . MAIN

    TK_MBEGIN  shift, and go to state 20

    MAIN  go to state 21


State 13

    3 DECLS: DECL . DECLS

    TK_FUNCTION  shift, and go to state 6
    TK_INT       shift, and go to state 7
    TK_CHAR      shift, and go to state 8
    TK_BOOL      shift, and go to state 9
    TK_DOUBLE    shift, and go to state 10
    TK_STRING    shift, and go to state 11

    TK_MBEGIN    reduce using rule 4 (DECLS)
    TK_MBEGIN    [reduce using rule 8 (VARS)]
    TK_FUNCTION  [reduce using rule 8 (VARS)]
    TK_INT       [reduce using rule 8 (VARS)]
    TK_CHAR      [reduce using rule 8 (VARS)]
    TK_BOOL      [reduce using rule 8 (VARS)]
    TK_DOUBLE    [reduce using rule 8 (VARS)]
    TK_STRING    [reduce using rule 8 (VARS)]
    $default     reduce using rule 4 (DECLS)

    DECLS     go to state 22
    DECL      go to state 13
    VARS      go to state 14
    VAR       go to state 15
    TIPO      go to state 16
    FUNCTION  go to state 17


State 14

    5 DECL: VARS .

    $default  reduce using rule 5 (DECL)


State 15

    7 VARS: VAR . ';' VARS

    ';'  shift, and go to state 23


State 16

    9 VAR: TIPO . IDS
   10    | TIPO . IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO . IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_ID  shift, and go to state 24

    IDS  go to state 25


State 17

    6 DECL: FUNCTION .

    $default  reduce using rule 6 (DECL)


State 18

    2 PROGRAM: TK_PROGRAM TK_ID ';' .

    $default  reduce using rule 2 (PROGRAM)


State 19

   22 FUNCTION: TK_FUNCTION $@1 . CABECALHO CORPO $@2

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO       go to state 26
    CABECALHO  go to state 27


State 20

   19 MAIN: TK_MBEGIN . BLOCO TK_MEND

    TK_BEGIN  shift, and go to state 28

    BLOCO  go to state 29


State 21

    1 S: PROGRAM DECLS MAIN .

    $default  reduce using rule 1 (S)


State 22

    3 DECLS: DECL DECLS .

    $default  reduce using rule 3 (DECLS)


State 23

    7 VARS: VAR ';' . VARS

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TK_INT     [reduce using rule 8 (VARS)]
    TK_CHAR    [reduce using rule 8 (VARS)]
    TK_BOOL    [reduce using rule 8 (VARS)]
    TK_DOUBLE  [reduce using rule 8 (VARS)]
    TK_STRING  [reduce using rule 8 (VARS)]
    $default   reduce using rule 8 (VARS)

    VARS  go to state 30
    VAR   go to state 15
    TIPO  go to state 16


State 24

   18 IDS: TK_ID .

    $default  reduce using rule 18 (IDS)


State 25

    9 VAR: TIPO IDS .
   10    | TIPO IDS . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   17 IDS: IDS . ',' TK_ID

    '['  shift, and go to state 31
    ','  shift, and go to state 32

    $default  reduce using rule 9 (VAR)


State 26

   25 CABECALHO: TIPO . TK_ID OPC_PARAM

    TK_ID  shift, and go to state 33


State 27

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO . CORPO $@2

    TK_BEGIN  shift, and go to state 34

    CORPO  go to state 35


State 28

   32 BLOCO: TK_BEGIN . $@4 CMDS TK_END

    $default  reduce using rule 31 ($@4)

    $@4  go to state 36


State 29

   19 MAIN: TK_MBEGIN BLOCO . TK_MEND

    TK_MEND  shift, and go to state 37


State 30

    7 VARS: VAR ';' VARS .

    $default  reduce using rule 7 (VARS)


State 31

   10 VAR: TIPO IDS '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 38


State 32

   17 IDS: IDS ',' . TK_ID

    TK_ID  shift, and go to state 39


State 33

   25 CABECALHO: TIPO TK_ID . OPC_PARAM

    '('  shift, and go to state 40

    $default  reduce using rule 27 (OPC_PARAM)

    OPC_PARAM  go to state 41


State 34

   24 CORPO: TK_BEGIN . $@3 CMDS RETURN TK_END

    $default  reduce using rule 23 ($@3)

    $@3  go to state 42


State 35

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO . $@2

    $default  reduce using rule 21 ($@2)

    $@2  go to state 43


State 36

   32 BLOCO: TK_BEGIN $@4 . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 49
    TIPO     go to state 16
    BLOCO    go to state 50
    CMDS     go to state 51
    CMD      go to state 52
    LOOP     go to state 53
    CMD_FOR  go to state 54
    CMD_IF   go to state 55
    WRITELN  go to state 56
    WRITE    go to state 57
    ATRIB    go to state 58


State 37

   19 MAIN: TK_MBEGIN BLOCO TK_MEND .

    $default  reduce using rule 19 (MAIN)


State 38

   10 VAR: TIPO IDS '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']'
   11    | TIPO IDS '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_PTPT  shift, and go to state 59


State 39

   17 IDS: IDS ',' TK_ID .

    $default  reduce using rule 17 (IDS)


State 40

   26 OPC_PARAM: '(' . PARAMS ')'

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO    go to state 60
    PARAMS  go to state 61
    PARAM   go to state 62


State 41

   25 CABECALHO: TIPO TK_ID OPC_PARAM .

    $default  reduce using rule 25 (CABECALHO)


State 42

   24 CORPO: TK_BEGIN $@3 . CMDS RETURN TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 49
    TIPO     go to state 16
    BLOCO    go to state 50
    CMDS     go to state 63
    CMD      go to state 52
    LOOP     go to state 53
    CMD_FOR  go to state 54
    CMD_IF   go to state 55
    WRITELN  go to state 56
    WRITE    go to state 57
    ATRIB    go to state 58


State 43

   22 FUNCTION: TK_FUNCTION $@1 CABECALHO CORPO $@2 .

    $default  reduce using rule 22 (FUNCTION)


State 44

   45 CMD_IF: TK_IF . E TK_BEGIN CMDS TK_END
   46       | TK_IF . E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 69
    F         go to state 70
    NOME_VAR  go to state 71


State 45

   44 CMD_FOR: TK_FOR . NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_ID  shift, and go to state 65

    NOME_VAR  go to state 72


State 46

   49 ATRIB: TK_ID . TK_ATRIB E
   50      | TK_ID . '[' E ']' TK_ATRIB E
   51      | TK_ID . '[' E ']' '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 73
    '['       shift, and go to state 74


State 47

   47 WRITELN: TK_WRITELN . '(' E ')'

    '('  shift, and go to state 75


State 48

   48 WRITE: TK_WRITE . '(' E ')'

    '('  shift, and go to state 76


State 49

   41 CMD: VAR .

    $default  reduce using rule 41 (CMD)


State 50

   40 CMD: BLOCO .

    $default  reduce using rule 40 (CMD)


State 51

   32 BLOCO: TK_BEGIN $@4 CMDS . TK_END

    TK_END  shift, and go to state 77


State 52

   34 CMDS: CMD . ';' CMDS

    ';'  shift, and go to state 78


State 53

   35 CMDS: LOOP . CMDS

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 49
    TIPO     go to state 16
    BLOCO    go to state 50
    CMDS     go to state 79
    CMD      go to state 52
    LOOP     go to state 53
    CMD_FOR  go to state 54
    CMD_IF   go to state 55
    WRITELN  go to state 56
    WRITE    go to state 57
    ATRIB    go to state 58


State 54

   43 LOOP: CMD_FOR .

    $default  reduce using rule 43 (LOOP)


State 55

   42 LOOP: CMD_IF .

    $default  reduce using rule 42 (LOOP)


State 56

   38 CMD: WRITELN .

    $default  reduce using rule 38 (CMD)


State 57

   37 CMD: WRITE .

    $default  reduce using rule 37 (CMD)


State 58

   39 CMD: ATRIB .

    $default  reduce using rule 39 (CMD)


State 59

   10 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']'
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 80


State 60

   30 PARAM: TIPO . TK_ID

    TK_ID  shift, and go to state 81


State 61

   26 OPC_PARAM: '(' PARAMS . ')'

    ')'  shift, and go to state 82


State 62

   28 PARAMS: PARAM . ',' PARAMS
   29       | PARAM .

    ','  shift, and go to state 83

    $default  reduce using rule 29 (PARAMS)


State 63

   24 CORPO: TK_BEGIN $@3 CMDS . RETURN TK_END

    TK_RETURN  shift, and go to state 84

    RETURN  go to state 85


State 64

   69 F: TK_TEXTO .

    $default  reduce using rule 69 (F)


State 65

   72 NOME_VAR: TK_ID .
   73         | TK_ID . '[' E ']'
   74         | TK_ID . '[' E ']' '[' E ']'
   75         | TK_ID . '(' EXPRS ')'

    '['  shift, and go to state 86
    '('  shift, and go to state 87

    $default  reduce using rule 72 (NOME_VAR)


State 66

   67 F: TK_INTEIRO .

    $default  reduce using rule 67 (F)


State 67

   68 F: TK_REAL .

    $default  reduce using rule 68 (F)


State 68

   64 E: '(' . E ')'

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 88
    F         go to state 70
    NOME_VAR  go to state 71


State 69

   45 CMD_IF: TK_IF E . TK_BEGIN CMDS TK_END
   46       | TK_IF E . TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_BEGIN  shift, and go to state 89
    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101


State 70

   65 E: F .

    $default  reduce using rule 65 (E)


State 71

   66 F: NOME_VAR .

    $default  reduce using rule 66 (F)


State 72

   44 CMD_FOR: TK_FOR NOME_VAR . TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_ATRIB  shift, and go to state 102


State 73

   49 ATRIB: TK_ID TK_ATRIB . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 103
    F         go to state 70
    NOME_VAR  go to state 71


State 74

   50 ATRIB: TK_ID '[' . E ']' TK_ATRIB E
   51      | TK_ID '[' . E ']' '[' E ']' TK_ATRIB E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 104
    F         go to state 70
    NOME_VAR  go to state 71


State 75

   47 WRITELN: TK_WRITELN '(' . E ')'

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 105
    F         go to state 70
    NOME_VAR  go to state 71


State 76

   48 WRITE: TK_WRITE '(' . E ')'

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 106
    F         go to state 70
    NOME_VAR  go to state 71


State 77

   32 BLOCO: TK_BEGIN $@4 CMDS TK_END .

    $default  reduce using rule 32 (BLOCO)


State 78

   34 CMDS: CMD ';' . CMDS

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 49
    TIPO     go to state 16
    BLOCO    go to state 50
    CMDS     go to state 107
    CMD      go to state 52
    LOOP     go to state 53
    CMD_FOR  go to state 54
    CMD_IF   go to state 55
    WRITELN  go to state 56
    WRITE    go to state 57
    ATRIB    go to state 58


State 79

   35 CMDS: LOOP CMDS .

    $default  reduce using rule 35 (CMDS)


State 80

   10 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']'
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    ']'  shift, and go to state 108


State 81

   30 PARAM: TIPO TK_ID .

    $default  reduce using rule 30 (PARAM)


State 82

   26 OPC_PARAM: '(' PARAMS ')' .

    $default  reduce using rule 26 (OPC_PARAM)


State 83

   28 PARAMS: PARAM ',' . PARAMS

    TK_INT     shift, and go to state 7
    TK_CHAR    shift, and go to state 8
    TK_BOOL    shift, and go to state 9
    TK_DOUBLE  shift, and go to state 10
    TK_STRING  shift, and go to state 11

    TIPO    go to state 60
    PARAMS  go to state 109
    PARAM   go to state 62


State 84

   33 RETURN: TK_RETURN . E ';'

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 110
    F         go to state 70
    NOME_VAR  go to state 71


State 85

   24 CORPO: TK_BEGIN $@3 CMDS RETURN . TK_END

    TK_END  shift, and go to state 111


State 86

   73 NOME_VAR: TK_ID '[' . E ']'
   74         | TK_ID '[' . E ']' '[' E ']'

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 112
    F         go to state 70
    NOME_VAR  go to state 71


State 87

   75 NOME_VAR: TK_ID '(' . EXPRS ')'

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 113
    F         go to state 70
    EXPRS     go to state 114
    NOME_VAR  go to state 71


State 88

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E
   64  | '(' E . ')'

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ')'       shift, and go to state 115


State 89

   45 CMD_IF: TK_IF E TK_BEGIN . CMDS TK_END
   46       | TK_IF E TK_BEGIN . CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 49
    TIPO     go to state 16
    BLOCO    go to state 50
    CMDS     go to state 116
    CMD      go to state 52
    LOOP     go to state 53
    CMD_FOR  go to state 54
    CMD_IF   go to state 55
    WRITELN  go to state 56
    WRITE    go to state 57
    ATRIB    go to state 58


State 90

   59 E: E TK_MAIG . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 117
    F         go to state 70
    NOME_VAR  go to state 71


State 91

   58 E: E TK_MEIG . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 118
    F         go to state 70
    NOME_VAR  go to state 71


State 92

   61 E: E TK_DIF . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 119
    F         go to state 70
    NOME_VAR  go to state 71


State 93

   60 E: E TK_EQUAL . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 120
    F         go to state 70
    NOME_VAR  go to state 71


State 94

   62 E: E TK_AND . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 121
    F         go to state 70
    NOME_VAR  go to state 71


State 95

   63 E: E TK_OR . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 122
    F         go to state 70
    NOME_VAR  go to state 71


State 96

   56 E: E '<' . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 123
    F         go to state 70
    NOME_VAR  go to state 71


State 97

   57 E: E '>' . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 124
    F         go to state 70
    NOME_VAR  go to state 71


State 98

   52 E: E '+' . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 125
    F         go to state 70
    NOME_VAR  go to state 71


State 99

   53 E: E '-' . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 126
    F         go to state 70
    NOME_VAR  go to state 71


State 100

   54 E: E '*' . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 127
    F         go to state 70
    NOME_VAR  go to state 71


State 101

   55 E: E '/' . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 128
    F         go to state 70
    NOME_VAR  go to state 71


State 102

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB . E TK_PTPT E TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 129
    F         go to state 70
    NOME_VAR  go to state 71


State 103

   49 ATRIB: TK_ID TK_ATRIB E .
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    $default  reduce using rule 49 (ATRIB)


State 104

   50 ATRIB: TK_ID '[' E . ']' TK_ATRIB E
   51      | TK_ID '[' E . ']' '[' E ']' TK_ATRIB E
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ']'       shift, and go to state 130


State 105

   47 WRITELN: TK_WRITELN '(' E . ')'
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ')'       shift, and go to state 131


State 106

   48 WRITE: TK_WRITE '(' E . ')'
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ')'       shift, and go to state 132


State 107

   34 CMDS: CMD ';' CMDS .

    $default  reduce using rule 34 (CMDS)


State 108

   10 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' .
   11    | TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' . '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    '['  shift, and go to state 133

    $default  reduce using rule 10 (VAR)


State 109

   28 PARAMS: PARAM ',' PARAMS .

    $default  reduce using rule 28 (PARAMS)


State 110

   33 RETURN: TK_RETURN E . ';'
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ';'       shift, and go to state 134


State 111

   24 CORPO: TK_BEGIN $@3 CMDS RETURN TK_END .

    $default  reduce using rule 24 (CORPO)


State 112

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E
   73 NOME_VAR: TK_ID '[' E . ']'
   74         | TK_ID '[' E . ']' '[' E ']'

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ']'       shift, and go to state 135


State 113

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E
   71 EXPRS: E .

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    $default  reduce using rule 71 (EXPRS)


State 114

   70 EXPRS: EXPRS . ',' E
   75 NOME_VAR: TK_ID '(' EXPRS . ')'

    ','  shift, and go to state 136
    ')'  shift, and go to state 137


State 115

   64 E: '(' E ')' .

    $default  reduce using rule 64 (E)


State 116

   45 CMD_IF: TK_IF E TK_BEGIN CMDS . TK_END
   46       | TK_IF E TK_BEGIN CMDS . TK_END TK_ELSE TK_BEGIN CMDS TK_END

    TK_END  shift, and go to state 138


State 117

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   59  | E TK_MAIG E .
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)

    TK_EQUAL  [reduce using rule 59 (E)]
    TK_OR     [reduce using rule 59 (E)]
    $default  reduce using rule 59 (E)


State 118

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   58  | E TK_MEIG E .
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)

    TK_EQUAL  [reduce using rule 58 (E)]
    TK_OR     [reduce using rule 58 (E)]
    $default  reduce using rule 58 (E)


State 119

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   61  | E TK_DIF E .
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)

    TK_EQUAL  [reduce using rule 61 (E)]
    TK_OR     [reduce using rule 61 (E)]
    $default  reduce using rule 61 (E)


State 120

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   60  | E TK_EQUAL E .
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_MAIG   [reduce using rule 60 (E)]
    TK_MEIG   [reduce using rule 60 (E)]
    TK_DIF    [reduce using rule 60 (E)]
    TK_EQUAL  [reduce using rule 60 (E)]
    TK_AND    [reduce using rule 60 (E)]
    TK_OR     [reduce using rule 60 (E)]
    '<'       [reduce using rule 60 (E)]
    '>'       [reduce using rule 60 (E)]
    '+'       [reduce using rule 60 (E)]
    '-'       [reduce using rule 60 (E)]
    '*'       [reduce using rule 60 (E)]
    '/'       [reduce using rule 60 (E)]
    $default  reduce using rule 60 (E)


State 121

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   62  | E TK_AND E .
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_EQUAL  [reduce using rule 62 (E)]
    TK_OR     [reduce using rule 62 (E)]
    $default  reduce using rule 62 (E)


State 122

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E
   63  | E TK_OR E .

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_MAIG   [reduce using rule 63 (E)]
    TK_MEIG   [reduce using rule 63 (E)]
    TK_DIF    [reduce using rule 63 (E)]
    TK_EQUAL  [reduce using rule 63 (E)]
    TK_AND    [reduce using rule 63 (E)]
    TK_OR     [reduce using rule 63 (E)]
    '<'       [reduce using rule 63 (E)]
    '>'       [reduce using rule 63 (E)]
    '+'       [reduce using rule 63 (E)]
    '-'       [reduce using rule 63 (E)]
    '*'       [reduce using rule 63 (E)]
    '/'       [reduce using rule 63 (E)]
    $default  reduce using rule 63 (E)


State 123

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   56  | E '<' E .
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)

    TK_EQUAL  [reduce using rule 56 (E)]
    TK_OR     [reduce using rule 56 (E)]
    $default  reduce using rule 56 (E)


State 124

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   57  | E '>' E .
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_MAIG  error (nonassociative)
    TK_MEIG  error (nonassociative)
    TK_DIF   error (nonassociative)
    '<'      error (nonassociative)
    '>'      error (nonassociative)

    TK_EQUAL  [reduce using rule 57 (E)]
    TK_OR     [reduce using rule 57 (E)]
    $default  reduce using rule 57 (E)


State 125

   52 E: E . '+' E
   52  | E '+' E .
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_EQUAL  [reduce using rule 52 (E)]
    TK_OR     [reduce using rule 52 (E)]
    $default  reduce using rule 52 (E)


State 126

   52 E: E . '+' E
   53  | E . '-' E
   53  | E '-' E .
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    TK_EQUAL  [reduce using rule 53 (E)]
    TK_OR     [reduce using rule 53 (E)]
    $default  reduce using rule 53 (E)


State 127

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   54  | E '*' E .
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95

    TK_EQUAL  [reduce using rule 54 (E)]
    TK_OR     [reduce using rule 54 (E)]
    $default  reduce using rule 54 (E)


State 128

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   55  | E '/' E .
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_EQUAL  shift, and go to state 93
    TK_OR     shift, and go to state 95

    TK_EQUAL  [reduce using rule 55 (E)]
    TK_OR     [reduce using rule 55 (E)]
    $default  reduce using rule 55 (E)


State 129

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E . TK_PTPT E TK_BEGIN CMDS TK_END
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    TK_PTPT   shift, and go to state 139
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101


State 130

   50 ATRIB: TK_ID '[' E ']' . TK_ATRIB E
   51      | TK_ID '[' E ']' . '[' E ']' TK_ATRIB E

    TK_ATRIB  shift, and go to state 140
    '['       shift, and go to state 141


State 131

   47 WRITELN: TK_WRITELN '(' E ')' .

    $default  reduce using rule 47 (WRITELN)


State 132

   48 WRITE: TK_WRITE '(' E ')' .

    $default  reduce using rule 48 (WRITE)


State 133

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' . TK_INTEIRO TK_PTPT TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 142


State 134

   33 RETURN: TK_RETURN E ';' .

    $default  reduce using rule 33 (RETURN)


State 135

   73 NOME_VAR: TK_ID '[' E ']' .
   74         | TK_ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 143

    $default  reduce using rule 73 (NOME_VAR)


State 136

   70 EXPRS: EXPRS ',' . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 144
    F         go to state 70
    NOME_VAR  go to state 71


State 137

   75 NOME_VAR: TK_ID '(' EXPRS ')' .

    $default  reduce using rule 75 (NOME_VAR)


State 138

   45 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END .
   46       | TK_IF E TK_BEGIN CMDS TK_END . TK_ELSE TK_BEGIN CMDS TK_END

    TK_ELSE  shift, and go to state 145

    $default  reduce using rule 45 (CMD_IF)


State 139

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT . E TK_BEGIN CMDS TK_END

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 146
    F         go to state 70
    NOME_VAR  go to state 71


State 140

   50 ATRIB: TK_ID '[' E ']' TK_ATRIB . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 147
    F         go to state 70
    NOME_VAR  go to state 71


State 141

   51 ATRIB: TK_ID '[' E ']' '[' . E ']' TK_ATRIB E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 148
    F         go to state 70
    NOME_VAR  go to state 71


State 142

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO . TK_PTPT TK_INTEIRO ']'

    TK_PTPT  shift, and go to state 149


State 143

   74 NOME_VAR: TK_ID '[' E ']' '[' . E ']'

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 150
    F         go to state 70
    NOME_VAR  go to state 71


State 144

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E
   70 EXPRS: EXPRS ',' E .

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    $default  reduce using rule 70 (EXPRS)


State 145

   46 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE . TK_BEGIN CMDS TK_END

    TK_BEGIN  shift, and go to state 151


State 146

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E . TK_BEGIN CMDS TK_END
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_BEGIN  shift, and go to state 152
    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101


State 147

   50 ATRIB: TK_ID '[' E ']' TK_ATRIB E .
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    $default  reduce using rule 50 (ATRIB)


State 148

   51 ATRIB: TK_ID '[' E ']' '[' E . ']' TK_ATRIB E
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ']'       shift, and go to state 153


State 149

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT . TK_INTEIRO ']'

    TK_INTEIRO  shift, and go to state 154


State 150

   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E
   74 NOME_VAR: TK_ID '[' E ']' '[' E . ']'

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101
    ']'       shift, and go to state 155


State 151

   46 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 49
    TIPO     go to state 16
    BLOCO    go to state 50
    CMDS     go to state 156
    CMD      go to state 52
    LOOP     go to state 53
    CMD_FOR  go to state 54
    CMD_IF   go to state 55
    WRITELN  go to state 56
    WRITE    go to state 57
    ATRIB    go to state 58


State 152

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN . CMDS TK_END

    TK_BEGIN    shift, and go to state 28
    TK_IF       shift, and go to state 44
    TK_FOR      shift, and go to state 45
    TK_INT      shift, and go to state 7
    TK_CHAR     shift, and go to state 8
    TK_BOOL     shift, and go to state 9
    TK_DOUBLE   shift, and go to state 10
    TK_STRING   shift, and go to state 11
    TK_ID       shift, and go to state 46
    TK_WRITELN  shift, and go to state 47
    TK_WRITE    shift, and go to state 48

    $default  reduce using rule 36 (CMDS)

    VAR      go to state 49
    TIPO     go to state 16
    BLOCO    go to state 50
    CMDS     go to state 157
    CMD      go to state 52
    LOOP     go to state 53
    CMD_FOR  go to state 54
    CMD_IF   go to state 55
    WRITELN  go to state 56
    WRITE    go to state 57
    ATRIB    go to state 58


State 153

   51 ATRIB: TK_ID '[' E ']' '[' E ']' . TK_ATRIB E

    TK_ATRIB  shift, and go to state 158


State 154

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO . ']'

    ']'  shift, and go to state 159


State 155

   74 NOME_VAR: TK_ID '[' E ']' '[' E ']' .

    $default  reduce using rule 74 (NOME_VAR)


State 156

   46 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 160


State 157

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS . TK_END

    TK_END  shift, and go to state 161


State 158

   51 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB . E

    TK_TEXTO    shift, and go to state 64
    TK_ID       shift, and go to state 65
    TK_INTEIRO  shift, and go to state 66
    TK_REAL     shift, and go to state 67
    '('         shift, and go to state 68

    E         go to state 162
    F         go to state 70
    NOME_VAR  go to state 71


State 159

   11 VAR: TIPO IDS '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' '[' TK_INTEIRO TK_PTPT TK_INTEIRO ']' .

    $default  reduce using rule 11 (VAR)


State 160

   46 CMD_IF: TK_IF E TK_BEGIN CMDS TK_END TK_ELSE TK_BEGIN CMDS TK_END .

    $default  reduce using rule 46 (CMD_IF)


State 161

   44 CMD_FOR: TK_FOR NOME_VAR TK_ATRIB E TK_PTPT E TK_BEGIN CMDS TK_END .

    $default  reduce using rule 44 (CMD_FOR)


State 162

   51 ATRIB: TK_ID '[' E ']' '[' E ']' TK_ATRIB E .
   52 E: E . '+' E
   53  | E . '-' E
   54  | E . '*' E
   55  | E . '/' E
   56  | E . '<' E
   57  | E . '>' E
   58  | E . TK_MEIG E
   59  | E . TK_MAIG E
   60  | E . TK_EQUAL E
   61  | E . TK_DIF E
   62  | E . TK_AND E
   63  | E . TK_OR E

    TK_MAIG   shift, and go to state 90
    TK_MEIG   shift, and go to state 91
    TK_DIF    shift, and go to state 92
    TK_EQUAL  shift, and go to state 93
    TK_AND    shift, and go to state 94
    TK_OR     shift, and go to state 95
    '<'       shift, and go to state 96
    '>'       shift, and go to state 97
    '+'       shift, and go to state 98
    '-'       shift, and go to state 99
    '*'       shift, and go to state 100
    '/'       shift, and go to state 101

    $default  reduce using rule 51 (ATRIB)
